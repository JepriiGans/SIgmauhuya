name: Keep Codespace Alive

on:
  schedule:
    # Jalankan setiap 10 menit
    - cron: '*/10 * * * *'
  workflow_dispatch: # Memungkinkan menjalankan workflow secara manual

jobs:
  ping-codespace:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Keep codespace alive using GitHub API
        env:
          GH_TOKEN: ${{ secrets.CODESPACE_PAT }}
          CODESPACE_NAME: "redesigned-yodel-x55rpq69jjj4h6jp6"
          GITHUB_USER: "JepriiGans"
        run: |
          echo "Attempting to keep codespace alive using GitHub API..."
          
          # Dapatkan informasi tentang semua codespace
          echo "Getting codespace information..."
          ALL_CODESPACES=$(curl -s -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/user/codespaces")
          
          echo "All codespaces (first 100 chars):"
          echo "$ALL_CODESPACES" | head -c 100
          
          # Cari codespace dengan nama yang sesuai
          echo "Finding codespace with name: $CODESPACE_NAME"
          CODESPACE_INFO=$(echo "$ALL_CODESPACES" | jq -r '.codespaces[] | select(.name=="'$CODESPACE_NAME'") // empty')
          
          # Jika tidak ditemukan, coba format JSON lain
          if [ -z "$CODESPACE_INFO" ]; then
            echo "Trying alternative JSON format..."
            CODESPACE_INFO=$(echo "$ALL_CODESPACES" | jq -r '.[] | select(.name=="'$CODESPACE_NAME'") // empty')
          fi
          
          # Jika masih tidak ditemukan, tampilkan semua data untuk debugging
          if [ -z "$CODESPACE_INFO" ]; then
            echo "Codespace not found. Showing full JSON structure for debugging:"
            echo "$ALL_CODESPACES" | jq '.'
            echo "Trying direct API call to the specific codespace..."
            CODESPACE_INFO=$(curl -s -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/user/codespaces/$CODESPACE_NAME")
          fi
          
          echo "Codespace info (if found):"
          echo "$CODESPACE_INFO" | jq '.' || echo "Failed to parse codespace info as JSON"
          
          # Dapatkan status codespace jika informasi ditemukan
          if [ -n "$CODESPACE_INFO" ]; then
            CODESPACE_STATE=$(echo "$CODESPACE_INFO" | jq -r '.state // "unknown"')
            echo "Codespace state: $CODESPACE_STATE"
            
            # Jika codespace tidak aktif, coba aktifkan
            if [ "$CODESPACE_STATE" != "running" ] && [ "$CODESPACE_STATE" != "idle" ]; then
              echo "Codespace is not running. Attempting to start it..."
              
              # Coba start codespace menggunakan API
              START_RESPONSE=$(curl -s -X POST \
                -H "Authorization: token $GH_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/user/codespaces/$CODESPACE_NAME/start")
              
              echo "Start response:"
              echo "$START_RESPONSE" | jq '.' || echo "$START_RESPONSE"
              
              # Tunggu beberapa saat agar codespace mulai
              echo "Waiting for codespace to start..."
              sleep 30
            fi
          else
            echo "Could not find codespace info. Continuing with direct pings..."
          fi
          
          # Ping codespace dengan mengakses URL (ini akan dilakukan terlepas dari apakah informasi codespace ditemukan)
          echo "Pinging codespace URL..."
          CODESPACE_URL="https://$CODESPACE_NAME.github.dev/"
          curl -s -I "$CODESPACE_URL" || echo "Failed to ping codespace URL"
          
          # Alternatif: Gunakan GitHub API untuk melakukan ping
          echo "Pinging codespace using GitHub API..."
          PING_RESPONSE=$(curl -s \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/user/codespaces/$CODESPACE_NAME")
          
          echo "Ping response (first 100 chars):"
          echo "$PING_RESPONSE" | head -c 100
          
          # =====================================================
          # Tambahan: Jaga port forwarding tetap aktif
          # =====================================================
          
          echo "Attempting to keep port forwarding active..."
          
          # Metode alternatif 1: Menggunakan API devcontainer configuration
          echo "Method 1: Using devcontainer configuration API..."
          DEVCONTAINER_RESPONSE=$(curl -s -X PATCH \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d '{"devcontainer_path":".devcontainer/devcontainer.json","forwardPorts":[3389,8006]}' \
            "https://api.github.com/user/codespaces/$CODESPACE_NAME")
          
          echo "Devcontainer response (first 100 chars):"
          echo "$DEVCONTAINER_RESPONSE" | head -c 100
          
          # Metode alternatif 2: Menggunakan GraphQL API untuk port forwarding
          echo "Method 2: Using GraphQL API..."
          
          # Generate GraphQL query untuk port forwarding
          GRAPHQL_QUERY='{
            "query": "mutation UpdateCodespaceForwardedPorts($input: UpdateCodespaceForwardedPortsInput!) { updateCodespaceForwardedPorts(input: $input) { ... on UpdateCodespaceForwardedPortsSuccess { success } ... on UpdateCodespaceForwardedPortsError { error } } }",
            "variables": {
              "input": {
                "codespaceName": "'$CODESPACE_NAME'",
                "ports": [
                  {"number": 3389, "visibility": "private"},
                  {"number": 8006, "visibility": "private"}
                ]
              }
            }
          }'
          
          # Execute GraphQL query
          GRAPHQL_RESPONSE=$(curl -s -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$GRAPHQL_QUERY" \
            "https://api.github.com/graphql")
          
          echo "GraphQL response:"
          echo "$GRAPHQL_RESPONSE" | jq '.'
          
          # Metode 3: Ping URL forwarded langsung
          echo "Method 3: Direct ping to forwarded URLs..."
          
          # Ping port 3389 (RDP) dengan URL alternatif
          echo "Pinging port 3389 (RDP)..."
          # Format 1
          PORT_URL_3389="https://$CODESPACE_NAME-3389.githubpreview.dev/"
          curl -s -I "$PORT_URL_3389" || echo "Failed to ping port 3389 format 1"
          
          # Format 2
          PORT_URL_3389_2="https://$CODESPACE_NAME-3389.preview.app.github.dev/"
          curl -s -I "$PORT_URL_3389_2" || echo "Failed to ping port 3389 format 2"
          
          # Format 3
          PORT_URL_3389_3="https://$CODESPACE_NAME.app.github.dev:3389/"
          curl -s -I "$PORT_URL_3389_3" || echo "Failed to ping port 3389 format 3"
          
          # Ping port 8006 dengan URL alternatif
          echo "Pinging port 8006..."
          # Format 1
          PORT_URL_8006="https://$CODESPACE_NAME-8006.githubpreview.dev/"
          curl -s -I "$PORT_URL_8006" || echo "Failed to ping port 8006 format 1"
          
          # Format 2
          PORT_URL_8006_2="https://$CODESPACE_NAME-8006.preview.app.github.dev/"
          curl -s -I "$PORT_URL_8006_2" || echo "Failed to ping port 8006 format 2"
          
          # Format 3
          PORT_URL_8006_3="https://$CODESPACE_NAME.app.github.dev:8006/"
          curl -s -I "$PORT_URL_8006_3" || echo "Failed to ping port 8006 format 3"
          
          echo "Codespace and port forwarding ping completed." 
