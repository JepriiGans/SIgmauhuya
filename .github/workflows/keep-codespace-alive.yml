name: Keep Codespace Alive

on:
  schedule:
    # Jalankan setiap 10 menit
    - cron: '*/10 * * * *'
  workflow_dispatch: # Memungkinkan menjalankan workflow secara manual

jobs:
  ping-codespace:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Keep codespace alive using GitHub API
        env:
          GH_TOKEN: ${{ secrets.CODESPACE_PAT }}
          CODESPACE_NAME: "redesigned-yodel-x55rpq69jjj4h6jp6"
          GITHUB_USER: "JepriiGans"
        run: |
          echo "Attempting to keep codespace alive using GitHub API..."
          
          # Dapatkan informasi tentang semua codespace
          echo "Getting codespace information..."
          ALL_CODESPACES=$(curl -s -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/user/codespaces")
          
          echo "All codespaces (first 100 chars):"
          echo "$ALL_CODESPACES" | head -c 100
          
          # Cari codespace dengan nama yang sesuai
          echo "Finding codespace with name: $CODESPACE_NAME"
          CODESPACE_INFO=$(echo "$ALL_CODESPACES" | jq -r '.codespaces[] | select(.name=="'$CODESPACE_NAME'") // empty')
          
          # Jika tidak ditemukan, coba format JSON lain
          if [ -z "$CODESPACE_INFO" ]; then
            echo "Trying alternative JSON format..."
            CODESPACE_INFO=$(echo "$ALL_CODESPACES" | jq -r '.[] | select(.name=="'$CODESPACE_NAME'") // empty')
          fi
          
          # Jika masih tidak ditemukan, tampilkan semua data untuk debugging
          if [ -z "$CODESPACE_INFO" ]; then
            echo "Codespace not found. Showing full JSON structure for debugging:"
            echo "$ALL_CODESPACES" | jq '.'
            echo "Trying direct API call to the specific codespace..."
            CODESPACE_INFO=$(curl -s -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/user/codespaces/$CODESPACE_NAME")
          fi
          
          echo "Codespace info (if found):"
          echo "$CODESPACE_INFO" | jq '.' || echo "Failed to parse codespace info as JSON"
          
          # Dapatkan status codespace jika informasi ditemukan
          if [ -n "$CODESPACE_INFO" ]; then
            CODESPACE_STATE=$(echo "$CODESPACE_INFO" | jq -r '.state // "unknown"')
            echo "Codespace state: $CODESPACE_STATE"
            
            # Jika codespace tidak aktif, coba aktifkan
            if [ "$CODESPACE_STATE" != "running" ] && [ "$CODESPACE_STATE" != "idle" ]; then
              echo "Codespace is not running. Attempting to start it..."
              
              # Coba start codespace menggunakan API
              START_RESPONSE=$(curl -s -X POST \
                -H "Authorization: token $GH_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/user/codespaces/$CODESPACE_NAME/start")
              
              echo "Start response:"
              echo "$START_RESPONSE" | jq '.' || echo "$START_RESPONSE"
              
              # Tunggu beberapa saat agar codespace mulai
              echo "Waiting for codespace to start..."
              sleep 30
            fi
          else
            echo "Could not find codespace info. Continuing with direct pings..."
          fi
          
          # Ping codespace dengan mengakses URL (ini akan dilakukan terlepas dari apakah informasi codespace ditemukan)
          echo "Pinging codespace URL..."
          CODESPACE_URL="https://$CODESPACE_NAME.github.dev/"
          curl -s -I "$CODESPACE_URL" || echo "Failed to ping codespace URL"
          
          # Alternatif: Gunakan GitHub API untuk melakukan ping
          echo "Pinging codespace using GitHub API..."
          PING_RESPONSE=$(curl -s \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/user/codespaces/$CODESPACE_NAME")
          
          echo "Ping response (first 100 chars):"
          echo "$PING_RESPONSE" | head -c 100
          
          # =====================================================
          # Tambahan: Jaga port forwarding tetap aktif
          # =====================================================
          
          echo "Attempting to keep port forwarding active..."
          
          # Dapatkan ID dari codespace untuk digunakan dalam API calls
          CODESPACE_ID=$(echo "$PING_RESPONSE" | jq -r '.id')
          echo "Codespace ID: $CODESPACE_ID"
          
          # Metode 1: Menggunakan CLI GitHub
          echo "Method 1: Using GitHub CLI port forwarding approach..."
          # Aktivasi port dengan body API yang lebih komprehensif
          PORTS_RESPONSE=$(curl -s -X PATCH \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d '{
              "ports": [
                {"number": 3389, "visibility": "private", "protocol": "tcp", "label": "RDP", "actionType": "share"},
                {"number": 8006, "visibility": "private", "protocol": "tcp", "label": "Custom Port", "actionType": "share"}
              ]
            }' \
            "https://api.github.com/user/codespaces/$CODESPACE_NAME")
          
          echo "Ports response:"
          echo "$PORTS_RESPONSE" | jq '.' || echo "$PORTS_RESPONSE"
          
          # Metode 2: Cara baru untuk Codespaces
          echo "Method 2: Using newer Codespaces API format..."
          
          # Mendapatkan web URL untuk port forwarding
          PORTS_WEB_URL=$(curl -s -X GET \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/user/codespaces/$CODESPACE_NAME/ports")
          
          echo "Ports Web URL Response:"
          echo "$PORTS_WEB_URL" | jq '.'
          
          # Metode 3: Gunakan approach alternatif untuk codespace port
          echo "Method 3: Using alternative port activation approach..."
          
          # Aktifkan port dengan metode PATCH alternatif
          ACTIVATE_RESPONSE=$(curl -s -X PATCH \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d '{
              "machine": {"name": "'$CODESPACE_NAME'"},
              "ports": [
                {"number": 3389, "visibility": "private"}, 
                {"number": 8006, "visibility": "private"}
              ]
            }' \
            "https://api.github.com/user/codespaces/$CODESPACE_NAME")
          
          echo "Alternative activation response:"
          echo "$ACTIVATE_RESPONSE" | jq '.' || echo "$ACTIVATE_RESPONSE"
          
          # Metode 4: Ping langsung ke URL tempat port mungkin tersedia
          echo "Method 4: Direct ping to possible port URLs..."
          
          # Format URL baru untuk port forwarding
          CODESPACE_DOMAIN=$(echo "$PING_RESPONSE" | jq -r '.web_url' | sed 's/https:\/\///')
          
          if [ -n "$CODESPACE_DOMAIN" ]; then
            echo "Using Codespace domain: $CODESPACE_DOMAIN"
          else
            # Gunakan format domain default jika tidak dapat mengekstrak dari respons
            CODESPACE_DOMAIN="$CODESPACE_NAME-3389.preview.app.github.dev"
          fi
          
          # Ping port 3389 dengan berbagai format URL
          echo "Pinging port 3389 (RDP) with new formats..."
          
          # Format baru 1: Menggunakan domain dari web_url
          PORT_URL_3389_NEW1="https://$CODESPACE_NAME.$GITHUB_USER.github.dev:3389"
          curl -s -I "$PORT_URL_3389_NEW1" || echo "Failed to ping port 3389 new format 1"
          
          # Format baru 2: Menggunakan pendekatan port-targetPort
          PORT_URL_3389_NEW2="https://$CODESPACE_NAME-3389.$GITHUB_USER.github.dev"
          curl -s -I "$PORT_URL_3389_NEW2" || echo "Failed to ping port 3389 new format 2"
          
          # Format baru 3: Langsung ke domain github.com
          PORT_URL_3389_NEW3="https://github.dev/codespaces/$CODESPACE_NAME/ports/3389"
          curl -s -I "$PORT_URL_3389_NEW3" || echo "Failed to ping port 3389 new format 3"
          
          # Format baru 4: Alternatif
          PORT_URL_3389_NEW4="https://$CODESPACE_NAME-3389.githubpreview.dev"
          curl -s -I "$PORT_URL_3389_NEW4" || echo "Failed to ping port 3389 new format 4"
          
          # Ping port 8006 dengan berbagai format URL
          echo "Pinging port 8006 with new formats..."
          
          # Format baru 1
          PORT_URL_8006_NEW1="https://$CODESPACE_NAME.$GITHUB_USER.github.dev:8006"
          curl -s -I "$PORT_URL_8006_NEW1" || echo "Failed to ping port 8006 new format 1"
          
          # Format baru 2
          PORT_URL_8006_NEW2="https://$CODESPACE_NAME-8006.$GITHUB_USER.github.dev"
          curl -s -I "$PORT_URL_8006_NEW2" || echo "Failed to ping port 8006 new format 2"
          
          # Format baru 3
          PORT_URL_8006_NEW3="https://github.dev/codespaces/$CODESPACE_NAME/ports/8006"
          curl -s -I "$PORT_URL_8006_NEW3" || echo "Failed to ping port 8006 new format 3"
          
          # Format baru 4
          PORT_URL_8006_NEW4="https://$CODESPACE_NAME-8006.githubpreview.dev"
          curl -s -I "$PORT_URL_8006_NEW4" || echo "Failed to ping port 8006 new format 4"
          
          echo "Codespace and port forwarding ping completed." 
